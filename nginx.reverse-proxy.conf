# attendance-tracker/nginx.reverse-proxy.conf (This is for the proxy container)

server {
    listen 80 default_server; # Listen on port 80 for incoming connections
    # listen [::]:80 default_server; # Listen on IPv6 too

    # Replace with your actual domain or leave as _ for IP access
    server_name _;

    # Optional: Configure logging locations if needed inside the proxy container
    # access_log /var/log/nginx/access.log;
    # error_log /var/log/nginx/error.log;

    # Security Headers (Good place to set these globally)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # add_header Strict-Transport-Security "max-age=..." always; # Add when using HTTPS
    add_header X-XSS-Protection "1; mode=block" always; # Older XSS header

    # --- Proxy API requests to Backend ---
    location /api/v1/ {

        # Pass necessary headers for the backend application
        proxy_set_header Host $host; # Pass original host header
        proxy_set_header X-Real-IP $remote_addr; # Pass real client IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Append proxy IPs
        proxy_set_header X-Forwarded-Proto $scheme; # Pass original protocol (http/https)

        # Use the service name 'backend' defined in docker-compose
        # and the port it EXPOSES internally (3001)
        proxy_pass http://backend:3001/api/v1/;
        
        # Settings for WebSocket or long-polling if needed later
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;

        # Optional: Adjust timeouts
        # proxy_connect_timeout 75s;
        # proxy_read_timeout 300s;
    }

    # --- Serve Frontend static files via Frontend Container ---
    location / {
        # Use the service name 'frontend' defined in docker-compose
        # and the port it EXPOSES internally (80)
        proxy_pass http://frontend:80/;

        # Pass necessary headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

         # Settings for WebSocket or long-polling if needed later by frontend
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
    }

    # Optional: Add gzip compression
    # gzip on;
    # gzip_types ...;
    # gzip_min_length 1000;
    # gzip_proxied expired no-cache no-store private auth;
    # gzip_vary on;
}

# Add another server block for HTTPS (port 443) when ready
# server {
#    listen 443 ssl http2;
#    server_name your_domain.com;
#    # ... SSL certificate config ...
#    # ... include proxy locations from above ...
# }